@page "/dailyconfiguration"

@using Microsoft.AspNetCore.Components
@using System.Globalization;
@using UtilsFolder.Enums;

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="px-10 py-10">
        <MudForm @ref="Form" @bind-IsValid="@Success" @bind-Errors="@Errors">
            <MudText Class="d-flex justify-center" Typo="Typo.h5">Configuración del día</MudText>
            <div class="flex-column mt-5">
                <MudSelect Required="true" @bind-Value="QuantityTest" T="int" Label="Cantidad de comidas" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem T="int" Value="2" />
                    <MudSelectItem T="int" Value="3" />
                    <MudSelectItem T="int" Value="4" />
                    <MudSelectItem T="int" Value="5" />
                </MudSelect>
                <MudStack>
                    <div class="row d-flex align-center mt-2">
                        <MudCheckBox Disabled="BreakfastCheckBoxDisableValue" @bind-Checked="BreakfastCheckTest" Color="Color.Primary" UnCheckedColor="Color.Default" Class="mr-3">@BreakFast</MudCheckBox>
                        <MudSelect Disabled="BreakfastSelectDisableValue" @bind-Value="BreakfastSatiety" Dense="true" Label="Contundencia" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined">
                            @foreach (SatietyEnum item in SatietyEnum.List)
                            {
                                <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                    <div class="row d-flex align-center mt-2">
                        <MudCheckBox Disabled="true" @bind-Checked="LaunchCheck" Color="Color.Primary" UnCheckedColor="Color.Default" Class="mr-3">Almuerzo</MudCheckBox>
                        <MudSelect @bind-Value="LaunchSatiety" Dense="true" Label="Contundencia" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                                @foreach (SatietyEnum item in SatietyEnum.List)
                                {
                                        <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                                }
                        </MudSelect>
                    </div>
                    <div class="row d-flex align-center mt-2">
                        <MudCheckBox Disabled="DinnerCheckBoxDisableValue" @bind-Checked="DinnerCheckTest" Color="Color.Primary" UnCheckedColor="Color.Default" 
                                    Class="mr-11">Cena</MudCheckBox>
                        <MudSelect Disabled="DinnerSelectDisableValue" @bind-Value="DinnerSatiety" Dense="true" Label="Contundencia" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined">
                            @foreach (SatietyEnum item in SatietyEnum.List)
                            {
                                <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                    <div class="row d-flex align-center mt-2">
                        <MudCheckBox Disabled="SnackCheckBoxDisableValue" @bind-Checked="SnackCheck" Color="Color.Primary" UnCheckedColor="Color.Default" 
                                    Class="mr-3">Merienda</MudCheckBox>
                        <MudSelect Disabled="SnackSelectDisableValue" @bind-Value="SnackSatiety" Dense="true" Label="Contundencia" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined">
                            @foreach (SatietyEnum item in SatietyEnum.List)
                            {
                                    <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                    <div class="mt-5">
                        <MudButton Class="pa-3"
                                   Disabled="@(!Success)"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary" 
                                   FullWidth="true">
                                   Confirmar
                        </MudButton>
                    </div>
                </MudStack>
            </div>
        </MudForm>

        
    </MudPaper>
</MudContainer>


@code {
    private bool Success;
    public int MealsQuantity = 3;
    private MudForm? Form;
    private string[] Errors = { };

    //Variables para el ticket de los Checkboxs de comidas del día
    private bool BreakfastCheck;
    private bool LaunchCheck = true;
    private bool DinnerCheck;
    private bool SnackCheck;
    //Variables para Selects de comidas del día
    private bool SnackSelectDisableValue;
    private bool BreakfastSelectDisableValue;
    private bool DinnerSelectDisableValue;

    //Variables para 
    private bool BreakfastCheckBoxDisableValue;
    private bool DinnerCheckBoxDisableValue;
    private bool SnackCheckBoxDisableValue;

    private static string BreakFast = MealTypeEnum.Breakfast.ReadableName;
    private MealTypeEnum? MealType;
    private SatietyEnum? BreakfastSatiety;
    private SatietyEnum? LaunchSatiety;
    private SatietyEnum? DinnerSatiety;
    private SatietyEnum? SnackSatiety;

    protected override Task OnInitializedAsync()
    {
        QuantityCheck(MealsQuantity);
        return base.OnInitializedAsync();
    }

    int QuantityTest
    {
        get { return MealsQuantity; }
        set { MealsQuantity = value; QuantityCheck(value); }
    }

    bool BreakfastCheckTest
    {
        get { return BreakfastCheck; }
        set { BreakfastCheck = value; BreakfastHandleCheck(value); }
    }
    bool DinnerCheckTest
    {
        get { return DinnerCheck; }
        set { DinnerCheck = value; DinnerHandleCheck(value); }
    }

    void BreakfastHandleCheck(bool IsChecked)
    {
        if (IsChecked && MealsQuantity == 2){
            DinnerCheck = false;
            DinnerSatiety = SatietyEnum.None;
            DinnerSelectDisableValue = true;
            BreakfastSelectDisableValue = false;
        }

    }

    void DinnerHandleCheck(bool IsChecked)
    {  
        if (IsChecked && MealsQuantity == 2)
        {
            BreakfastCheck = false;
            BreakfastSelectDisableValue = true;
            DinnerSelectDisableValue = false;
            BreakfastSatiety = SatietyEnum.None;
        }

    }

    void QuantityCheck(int quantity)
    {
        if (quantity == 2)
        {
            TwoMealsConfiguration();

        }
        if (quantity == 3)
        {
            ThreeMealsConfiguration();
        }
        if (quantity == 4)
        {
            FourMealsConfiguration();
        }
        if (quantity == 5)
        {
            BreakfastCheck = true;
            DinnerCheck = true;
            SnackCheck = true;
        }

    }

    void TwoMealsConfiguration()
    {
        BreakfastCheck = true;
        DinnerCheck = false;
        SnackCheck = false;
        BreakfastCheckBoxDisableValue = false;
        DinnerSelectDisableValue = true;
        DinnerCheckBoxDisableValue = false;
        SnackCheckBoxDisableValue = true;
        SnackSelectDisableValue = true;
        SnackSatiety = SatietyEnum.None;

    }

    void ThreeMealsConfiguration()
    {
        BreakfastCheck = true;
        DinnerCheck = true;
        BreakfastCheckBoxDisableValue = true;
        DinnerCheckBoxDisableValue = true;
        DinnerSelectDisableValue = false;
        BreakfastSelectDisableValue = false;
        SnackCheck = false;
        SnackCheckBoxDisableValue = true;
        SnackSelectDisableValue = true;
        SnackSatiety = SatietyEnum.None;

    }

    void FourMealsConfiguration()
    {
        BreakfastCheck = true;
        DinnerCheck = true;
        SnackCheck = true;
        BreakfastCheckBoxDisableValue = true;
        DinnerCheckBoxDisableValue = true;
        SnackCheckBoxDisableValue = true;
        BreakfastSelectDisableValue = false;
        DinnerSelectDisableValue = false;
        SnackSelectDisableValue = false;
    }

}
