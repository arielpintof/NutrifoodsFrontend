@inject AuthenticationStateProvider AuthState
@inject IDialogService DialogService
@using UtilsFolder.ToolTip;
@using System.Reflection.Metadata

<MudPaper Outlined="true" Class="pa-1 rounded-pill">
    <div class="d-flex pl-3 pr-3 justify-space-between">
        <div class="d-flex align-center">
            <MudIcon Class="mr-3" Size="Size.Medium" Icon="@Icons.Filled.PieChart" />
            <MudText Typo="Typo.h6" Color="Color.Info">@TotalEnergy() Kilocalorías</MudText>
            <MudIconButton OnClick="@ToggleOpen" Size="Size.Medium" Icon="@Icons.Filled.Info" />
        </div>
        <AuthorizeView>
            <Authorized>
                <div>
                    <MudTooltip Text="@InfoMessage.DailyConfiguration" Arrow="true" Placement="Placement.Right">
                        <MudIconButton @onclick="OpenDialog" Size="Size.Medium" Icon="@Icons.Filled.Settings" />
                    </MudTooltip>
                    
                </div>
            </Authorized>
        </AuthorizeView>
        
    </div>
    <MudPopover Open="_isOpen" OverflowBehavior="OverflowBehavior.FlipAlways" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopCenter" 
                Paper="false">
        <DistributionComponent Energy="TotalEnergy()"Carbs="TotalCarbs()"Proteins="TotalProteins()"
                               Lipids="TotalLipids()">
        </DistributionComponent>
    </MudPopover>
</MudPaper>


@code {
    [Parameter]
    public Dictionary<string, int>? Macronutrients { get; set; }
    
    [Parameter]
    public EventCallback OnDailyConfigurationChanged { get; set; }
    
    private int TotalMacronutrient(string macronutrient) => (Macronutrients ?? throw new InvalidOperationException())
        .Where(c => c.Key.Contains(macronutrient)).Select(c => c.Value).FirstOrDefault();
    
    private int TotalEnergy() => TotalMacronutrient("Energy");

    private int TotalCarbs() => TotalMacronutrient("Carbohydrates");

    private int TotalProteins() => TotalMacronutrient("Proteins");

    private int TotalLipids() => TotalMacronutrient("Lipids");
    
    private bool _isOpen = false;
    
    
    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters();
        parameters.Add("OnDailyConfigurationChanged", OnDailyConfigurationChanged);
        DialogService.Show<DailyConfiguration >("", parameters, options);
        
    }

    private void ToggleOpen()
    {
        _isOpen = !_isOpen;
    }
    
}
