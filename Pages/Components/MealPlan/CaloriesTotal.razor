@inject AuthenticationStateProvider AuthState
@inject IDialogService DialogService
@using UtilsFolder.ToolTip;

<MudPaper Outlined="true" Class="pa-1 rounded-pill">
    <div class="d-flex pl-3 pr-3 justify-space-between">
        <div class="d-flex align-center">
            <MudIcon Class="mr-3" Size="Size.Medium" Icon="@Icons.Filled.PieChart" />
            <MudText Typo="Typo.h6" Color="Color.Info">@totalEnergy() Kilocalorías</MudText>
            <MudIconButton OnClick="@ToggleOpen" Size="Size.Medium" Icon="@Icons.Filled.Info" />
        </div>
        <AuthorizeView>
            <Authorized>
                <div>
                    <MudTooltip Text="@InfoMessage.DailyConfiguration" Arrow="true" Placement="Placement.Right">
                        <MudIconButton @onclick="OpenDialog" Size="Size.Medium" Icon="@Icons.Filled.Settings" />
                    </MudTooltip>
                    
                </div>
            </Authorized>
        </AuthorizeView>
        
    </div>
    <MudPopover Open="_isOpen" OverflowBehavior="OverflowBehavior.FlipAlways" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopCenter" Paper="false">
        <DistributionComponent Energy="totalEnergy()"
                               Carbs="totalCarbs()"
                               Proteins="totalProteins()"
                               Lipids="totalLipids()">
        </DistributionComponent>
    </MudPopover>
</MudPaper>


@code {
    [Parameter]
    public Dictionary<string, int> Macronutrients { get; set; }

    public int totalEnergy() => Macronutrients.Where(c => c.Key.Contains("Energy")).Select(c => c.Value).FirstOrDefault();
    
    public int totalCarbs() => Macronutrients.Where(c => c.Key.Contains("Carbohydrates")).Select(c => c.Value).FirstOrDefault();
    
    public int totalProteins() => Macronutrients.Where(c => c.Key.Contains("Proteins")).Select(c => c.Value).FirstOrDefault();
    
    public int totalLipids() => Macronutrients.Where(c => c.Key.Contains("Lipids")).Select(c => c.Value).FirstOrDefault();

    public bool _isOpen = false;

   
    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<DailyConfiguration>("",options);
    }

    public void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }
    
}
