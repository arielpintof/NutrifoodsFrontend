@page "/Invitado"
@using NutrifoodsFrontend.Data.State
@using NutrifoodsFrontend.UtilsFolder.Nutrition
@using UtilsFolder.Enums;
@using Microsoft.AspNetCore.Components
@implements IDisposable
@inject UserEnergyState UserEnergyState

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper>
        <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
            <div class="d-flex flex-column pa-4">
                <MudText Typo="Typo.h5" Class="pa-4">Métricas Corporales</MudText>
                <div class="d-flex">
                    <MudTextField @bind-Value="_heightValue" Class="pa-4" Label="Altura" Variant="Variant.Outlined" 
                                  Adornment="Adornment.End" AdornmentText="Centímetros" AdornmentColor="Color.Info"
                                  Required="true" RequiredError="La altura es obligatoria" />
                    <MudTextField Class="pa-4" @bind-Value="_weightValue" Label="Peso" Variant="Variant.Outlined" 
                                  Adornment="Adornment.End" AdornmentText="Kilogramos" AdornmentColor="Color.Info"
                                  Required="true" RequiredError="El peso es obligatorio" />
                </div>
                <div>
                    <MudTextField @bind-Value="_ageValue" Class="pa-4" Label="Edad" Variant="Variant.Outlined" 
                                  Adornment="Adornment.End" AdornmentText="Años" AdornmentColor="Color.Info"
                                  Required="true" RequiredError="La edad es obligatoria" />
                </div>
                
                <div class="pa-4">
                    <MudSelect Required="true" Dense="true" @bind-Value="_physicalValue" Class="pb-4" Label="Actividad Física" 
                               Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" >
                        @foreach (var item in PhysicalActivityEnumList)
                        {
                            <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect Required="true" Dense="true" @bind-Value="_genderValue" Class="pb-4" Label="Genero" 
                               Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" >
                        @foreach (var item in GenderEnumList)
                        {
                            <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                        }
                    </MudSelect>  
                </div>
                <div class="mt-2 pa-4">
                    <MudButton Class="pa-3" Disabled="@(!_success)" Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="ChangePropertyValue" Href="https://localhost:5001/mealplan" FullWidth="true">
                        Siguiente
                    </MudButton>
                </div>
            </div>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    private MudForm? _form;
    private bool _success;
    private string[] _errors = { };
    private double? _weightValue;
    private int? _heightValue;
    private int? _ageValue;
    private GenderEnum? _genderValue;
    private PhysicalActivityEnum? _physicalValue;
    
    protected override void OnInitialized() => UserEnergyState.OnChange += StateHasChanged;

    private void ChangePropertyValue() => UserEnergyState.Property = TotalMetabolicRate.Calculate(_genderValue!, (double) _weightValue!, 
       (int)_heightValue!, (int)_ageValue!, _physicalValue!);
    
    private static IEnumerable<GenderEnum> GenderEnumList => GenderEnum.NonNullValues;
    
    private static IEnumerable<PhysicalActivityEnum> PhysicalActivityEnumList => PhysicalActivityEnum.NonNullValues;
    
    public void Dispose() => UserEnergyState.OnChange -= StateHasChanged;
   
}
