@page "/personaldata"
@using NutrifoodsFrontend.UtilsFolder.ToolTip
@using UtilsFolder.Enums
@inject AuthenticationStateProvider AuthState
@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper>
        <MudForm @ref="Form" @bind-IsValid="@Success" @bind-Errors="@errors">
            <div class="d-flex flex-column pa-4">
                <MudText Typo="Typo.h5" Class="pa-4">Datos Personales</MudText>
                <div class="d-flex mt-3">
                    <MudTextField Required="true" Class="px-3" @bind-Value="Name" Label="Nombre" Variant="Variant.Outlined"></MudTextField>
                    <MudTextField Required="true" Class="px-3" @bind-Value="LastName" Label="Apellido" Variant="Variant.Outlined"></MudTextField>
                </div>
                <div class="pl-3 pr-3 mt-3">
                    <MudSelect Required="true" Dense="true" @bind-Value="GenderValue" Class="pb-4" Label="Género" Variant="Variant.Outlined">
                        @foreach (GenderEnum item in GenderEnum.List)
                        {
                            <MudSelectItem Value="@item">@item.ReadableName</MudSelectItem>
                        }
                    </MudSelect>
                </div>
                <MudDatePicker Required="true" Label="Fecha de Nacimiento" Class="px-3" @ref="_picker" DateFormat="yyyy-MM-dd" @bind-Date="date">
                    <PickerActions>
                        <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Limpiar</MudButton>
                        <MudButton OnClick="@(() => _picker.Close(false))">Cancelar</MudButton>
                        <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                    </PickerActions>
                </MudDatePicker>

                <div class="pa-3 mt-3">
                    <MudButton     Class="pa-3" 
                                   Disabled="@(!Success)" 
                                   Variant="Variant.Filled" 
                                   Color="Color.Primary"
                                   Href="https://localhost:5001/body"
                                   FullWidth="true"
                                   OnClick="SaveUserData">
                                   Siguiente
                    </MudButton>
                </div>
            </div>
        </MudForm>
    </MudPaper>   
</MudContainer>

@code {
    private bool Success;
    private string[] errors = { };
    private string? Name { get; set; }
    private string? LastName { get; set; }
    private MudForm? Form;
    private MudDatePicker? _picker;
    private DateTime? date = DateTime.Today;
    private GenderEnum? GenderValue;


    private async Task SaveUserData()
    {
        var authenticationState = await AuthState.GetAuthenticationStateAsync();
        var apiKey = authenticationState.User.Claims
            .Where(c => c.Type.Equals(Claims.NameIdentifier))
            .Select(c => c.Value).FirstOrDefault() ?? string.Empty;
            
        
        //SavePersonalData(Name, LastName, date, GenderValue);
    }


}
