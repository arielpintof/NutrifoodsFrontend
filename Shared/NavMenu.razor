@inject AuthenticationStateProvider AuthState

<MudNavMenu Dense="true" Margin="Margin.Normal" Bordered="true">
    <AuthorizeView>
        <Authorized>
            <div class="d-flex justify-center mb-3">
                <MudAvatar Size="Size.Large" Image="UserPicture"/>
            </div>
            <MudDivider />
        </Authorized>
    </AuthorizeView>         
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink Href="mealplan" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.Dining">Regimen Alimentario</MudNavLink>
    <MudNavLink Href="weeklymealplan" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.Dining">Regimen Alimentario Semanal</MudNavLink>
    <MudNavLink Href="body" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.AssignmentTurnedIn">Métricas Corporales</MudNavLink>
    <MudNavLink Href="personaldata" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.Person">Datos Personales</MudNavLink>
    <MudNavLink Href="distribution" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.PieChart">Distribución</MudNavLink>
    <MudNavLink Href="dailyconfiguration" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.SettingsApplications">Configuración del día</MudNavLink>
    <MudNavLink Href="Invitado" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.Hail">Invitado</MudNavLink>
    <MudNavLink Href="update-metrics" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.AssignmentTurnedIn">Actualizar Métricas Corporales</MudNavLink>

    
    
</MudNavMenu>

@code{
    private string? UserPicture { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthState.GetAuthenticationStateAsync();
        UserPicture = state.User.Claims
                    .Where(c => c.Type.Equals("picture"))
                    .Select(c => c.Value)
                    .FirstOrDefault() ?? string.Empty;

        
        await base.OnInitializedAsync();
    }
}
